#!/usr/bin/env python


"""A Skeleton HTML page template, that provides basic structure
and utility methods.
"""


##################################################
# DEPENDENCIES
import sys  # noqa: F401 imported but unused
import os
import os.path  # noqa: F401 imported but unused
try:
    import builtins as builtin
except ImportError:
    import __builtin__ as builtin  # noqa: F401 imported but unused
from os.path import getmtime, exists  # noqa: F401 imported but unused
import time
import types  # noqa: F401 imported but unused
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import \
    MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import DummyTransaction
from Cheetah.DummyTransaction import TransformerTransaction  # noqa: F401
from Cheetah.NameMapper import NotFound  # noqa: F401 imported but unused
from Cheetah.NameMapper import valueForName, valueFromSearchList, \
    valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion  # noqa: F401 imported but unused
import Cheetah.Filters as Filters  # noqa: F401 imported but unused
import Cheetah.ErrorCatchers as ErrorCatchers  # noqa: F401 imported but unused
from Cheetah.compat import unicode  # noqa: F401 imported but unused
from Cheetah.Templates._SkeletonPage import _SkeletonPage

##################################################
# MODULE CONSTANTS
VFFSL = valueFromFrameOrSearchList
VFSL = valueFromSearchList
VFN = valueForName
currentTime = time.time
__CHEETAH_version__ = '3.0.0'
__CHEETAH_versionTuple__ = (3, 0, 0, 'final', 1)
__CHEETAH_genTime__ = 1513519692.7795014
__CHEETAH_genTimestamp__ = 'Sun Dec 17 17:08:12 2017'
__CHEETAH_src__ = 'Cheetah/Templates/SkeletonPage.tmpl'
__CHEETAH_srcLastModified__ = 'Sun Dec 17 17:07:56 2017'
__CHEETAH_docstring__ = 'Autogenerated by Cheetah: The Python-Powered Template Engine  # noqa: E501'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.' % (
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
# CLASSES


class SkeletonPage(_SkeletonPage):

    ##################################################
    # CHEETAH GENERATED METHODS

    def __init__(self, *args, **KWs):
        super(SkeletonPage, self).__init__(*args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = \
                'searchList namespaces filter filtersLib errorCatcher'.split()
            for k, v in KWs.items():
                if k in allowedKWs:
                    cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)

    def writeHeadTag(self, **KWS):

        # CHEETAH: generated from #block writeHeadTag at line 23, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering
                and not callable(self.transaction)):
            trans = self.transaction  # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else:
            _dummyTrans = False
        write = trans.response().write  # noqa: F841
        SL = self._CHEETAH__searchList  # noqa: F841
        _filter = self._CHEETAH__currentFilter  # noqa: F841

        ########################################
        # START - generated method body
        write('''<head>
<title>''')
        _v = VFSL([locals()]+SL+[globals(), builtin], "title", True)  # noqa: E501; '$title' on line 25, col 8
        if _v is not None:
            write(_filter(_v, rawExpr='$title'))  # noqa: E501; from line 25, col 8.
        write('''</title>
''')
        _v = VFSL([locals()]+SL+[globals(), builtin], "metaTags", True)  # noqa: E501; '$metaTags' on line 26, col 1
        if _v is not None:
            write(_filter(_v, rawExpr='$metaTags'))  # noqa: E501; from line 26, col 1.
        write('''
''')
        _v = VFSL([locals()]+SL+[globals(), builtin], "stylesheetTags", True)  # noqa: E501; '$stylesheetTags' on line 27, col 1
        if _v is not None:
            write(_filter(_v, rawExpr='$stylesheetTags'))  # noqa: E501; from line 27, col 1.
        write('''
''')
        _v = VFSL([locals()]+SL+[globals(), builtin], "javascriptTags", True)  # noqa: E501; '$javascriptTags' on line 28, col 1
        if _v is not None:
            write(_filter(_v, rawExpr='$javascriptTags'))  # noqa: E501; from line 28, col 1.
        write('''
</head>
''')

        ########################################
        # END - generated method body

        return _dummyTrans and trans.response().getvalue() or ""

    def writeBody(self, **KWS):

        # CHEETAH: generated from #block writeBody at line 37, col 1.
        trans = KWS.get("trans")
        if (not trans and not self._CHEETAH__isBuffering
                and not callable(self.transaction)):
            trans = self.transaction  # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else:
            _dummyTrans = False
        write = trans.response().write  # noqa: F841
        SL = self._CHEETAH__searchList  # noqa: F841
        _filter = self._CHEETAH__currentFilter  # noqa: F841

        ########################################
        # START - generated method body
        write('''This skeleton page has no flesh. Its body needs to be implemented.
''')

        ########################################
        # END - generated method body

        return _dummyTrans and trans.response().getvalue() or ""

    def respond(self, trans=None):

        # CHEETAH: main method generated for this template
        if (not trans and not self._CHEETAH__isBuffering
                and not callable(self.transaction)):
            trans = self.transaction  # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else:
            _dummyTrans = False
        write = trans.response().write  # noqa: F841
        SL = self._CHEETAH__searchList  # noqa: F841
        _filter = self._CHEETAH__currentFilter  # noqa: F841

        ########################################
        # START - generated method body

        # START CACHE REGION: ID=header. line 7, col 1 in the source.
        _RECACHE_header = False
        _cacheRegion_header = self.getCacheRegion(
            regionID='header', cacheInfo={'id': 'header', 'type': 2})
        if _cacheRegion_header.isNew():
            _RECACHE_header = True
        _cacheItem_header = _cacheRegion_header.getCacheItem('header')
        if _cacheItem_header.hasExpired():
            _RECACHE_header = True
        if (not _RECACHE_header) and _cacheItem_header.getRefreshTime():
            try:
                _output = _cacheItem_header.renderOutput()
            except KeyError:
                _RECACHE_header = True
            else:
                write(_output)
                del _output
        if _RECACHE_header or not _cacheItem_header.getRefreshTime():
            _orig_transheader = trans
            trans = _cacheCollector_header = DummyTransaction()
            write = _cacheCollector_header.response().write
            _v = VFSL([locals()]+SL+[globals(), builtin], "docType", True)  # noqa: E501; '$docType' on line 8, col 1
            if _v is not None:
                write(_filter(_v, rawExpr='$docType'))  # noqa: E501; from line 8, col 1.
            write('''
''')
            _v = VFSL([locals()]+SL+[globals(), builtin], "htmlTag", True)  # noqa: E501; '$htmlTag' on line 9, col 1
            if _v is not None:
                write(_filter(_v, rawExpr='$htmlTag'))  # noqa: E501; from line 9, col 1.
            write('''
<!-- This document was autogenerated by Cheetah (http://cheetahtemplate.org/).
Do not edit it directly!

Copyright ''')
            _v = VFSL([locals()]+SL+[globals(), builtin], "currentYr", True)  # noqa: E501; '$currentYr' on line 13, col 11
            if _v is not None:
                write(_filter(_v, rawExpr='$currentYr'))  # noqa: E501; from line 13, col 11.
            write(''' - ''')
            _v = VFSL([locals()]+SL+[globals(), builtin], "siteCopyrightName", True)  # noqa: E501; '$siteCopyrightName' on line 13, col 24
            if _v is not None:
                write(_filter(_v, rawExpr='$siteCopyrightName'))  # noqa: E501; from line 13, col 24.
            write(''' - All Rights Reserved.
Feel free to copy any javascript or html you like on this site,
provided you remove all links and/or references to ''')
            _v = VFSL([locals()]+SL+[globals(), builtin], "siteDomainName", True)  # noqa: E501; '$siteDomainName' on line 15, col 52
            if _v is not None:
                write(_filter(_v, rawExpr='$siteDomainName'))  # noqa: E501; from line 15, col 52.
            write('''
However, please do not copy any content or images without permission.

''')
            _v = VFSL([locals()]+SL+[globals(), builtin], "siteCredits", True)  # noqa: E501; '$siteCredits' on line 18, col 1
            if _v is not None:
                write(_filter(_v, rawExpr='$siteCredits'))  # noqa: E501; from line 18, col 1.
            write('''

-->


''')
            self.writeHeadTag(trans=trans)
            write('''
''')
            trans = _orig_transheader
            write = trans.response().write
            _cacheData = _cacheCollector_header.response().getvalue()
            _cacheItem_header.setData(_cacheData)
            write(_cacheData)
            del _cacheData
            del _cacheCollector_header
            del _orig_transheader
        # END CACHE REGION: header

        write('''
''')
        _v = VFSL([locals()]+SL+[globals(), builtin], "bodyTag", True)  # noqa: E501; '$bodyTag' on line 35, col 1
        if _v is not None:
            write(_filter(_v, rawExpr='$bodyTag'))  # noqa: E501; from line 35, col 1.
        write('''

''')
        self.writeBody(trans=trans)
        write('''
</body>
</html>



''')

        ########################################
        # END - generated method body

        return _dummyTrans and trans.response().getvalue() or ""

    ##################################################
    # CHEETAH GENERATED ATTRIBUTES
    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_SkeletonPage = 'respond'


# END CLASS DEFINITION


if not hasattr(SkeletonPage, '_initCheetahAttributes'):
    templateAPIClass = getattr(SkeletonPage,
                               '_CHEETAH_templateClass',
                               Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(SkeletonPage)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://cheetahtemplate.org/

##################################################
# if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=SkeletonPage()).run()


